# Generated by Django 5.2.4 on 2025-08-18 14:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VirtualMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('machine_id', models.CharField(max_length=50, unique=True, verbose_name='ID da Máquina')),
                ('name', models.CharField(max_length=100, verbose_name='Nome da VM')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('status', models.CharField(choices=[('stopped', 'Parada'), ('running', 'Executando'), ('error', 'Erro'), ('maintenance', 'Manutenção'), ('offline', 'Offline')], default='stopped', max_length=20, verbose_name='Status')),
                ('mode', models.CharField(choices=[('PRODUCAO', 'Produção'), ('TESTE', 'Teste'), ('DESENVOLVIMENTO', 'Desenvolvimento')], default='TESTE', max_length=20, verbose_name='Modo de Operação')),
                ('connection_status', models.CharField(choices=[('connected', 'Conectado'), ('disconnected', 'Desconectado'), ('connecting', 'Conectando'), ('error', 'Erro de Conexão')], default='disconnected', max_length=20, verbose_name='Status da Conexão')),
                ('django_url', models.URLField(verbose_name='URL do Django')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Endereço IP')),
                ('port', models.IntegerField(default=5000, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Porta')),
                ('source_type', models.CharField(choices=[('camera', 'Câmera Local'), ('camera_IP', 'Câmera IP'), ('pasta', 'Pasta de Imagens'), ('rtsp', 'Stream RTSP')], default='camera', max_length=20, verbose_name='Tipo de Fonte')),
                ('camera_id', models.IntegerField(default=0, verbose_name='ID da Câmera')),
                ('resolution_width', models.IntegerField(default=752, verbose_name='Largura da Resolução')),
                ('resolution_height', models.IntegerField(default=480, verbose_name='Altura da Resolução')),
                ('fps', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='FPS')),
                ('folder_path', models.CharField(blank=True, max_length=500, verbose_name='Caminho da Pasta')),
                ('rtsp_url', models.URLField(blank=True, verbose_name='URL RTSP')),
                ('trigger_type', models.CharField(choices=[('continuous', 'Contínuo'), ('manual', 'Manual'), ('external', 'Externo'), ('scheduled', 'Agendado')], default='continuous', max_length=20, verbose_name='Tipo de Trigger')),
                ('trigger_interval_ms', models.IntegerField(default=1000, validators=[django.core.validators.MinValueValidator(100)], verbose_name='Intervalo do Trigger (ms)')),
                ('inspection_config', models.JSONField(default=dict, verbose_name='Configuração de Inspeção')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True, verbose_name='Último Heartbeat')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensagem de Erro')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Proprietário')),
            ],
            options={
                'verbose_name': 'Máquina Virtual',
                'verbose_name_plural': 'Máquinas Virtuais',
                'db_table': 'api_virtual_machine',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VMHeartbeat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('status', models.CharField(choices=[('stopped', 'Parada'), ('running', 'Executando'), ('error', 'Erro'), ('maintenance', 'Manutenção'), ('offline', 'Offline')], max_length=20, verbose_name='Status')),
                ('connection_status', models.CharField(choices=[('connected', 'Conectado'), ('disconnected', 'Desconectado'), ('connecting', 'Conectando'), ('error', 'Erro de Conexão')], max_length=20, verbose_name='Status da Conexão')),
                ('error_message', models.TextField(blank=True, verbose_name='Mensagem de Erro')),
                ('performance_metrics', models.JSONField(default=dict, verbose_name='Métricas de Performance')),
                ('virtual_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='heartbeats', to='api.virtualmachine', verbose_name='Máquina Virtual')),
            ],
            options={
                'verbose_name': 'Heartbeat da VM',
                'verbose_name_plural': 'Heartbeats das VMs',
                'db_table': 'api_vm_heartbeat',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VMInspectionTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nome da Ferramenta')),
                ('tool_type', models.CharField(choices=[('grayscale', 'Filtro Grayscale'), ('blob', 'Detector de Blob'), ('math', 'Ferramenta Matemática'), ('custom', 'Personalizada')], max_length=20, verbose_name='Tipo de Ferramenta')),
                ('method', models.CharField(choices=[('luminance', 'Luminância'), ('threshold', 'Threshold'), ('edge_detection', 'Detecção de Bordas'), ('pattern_matching', 'Correspondência de Padrões')], max_length=20, verbose_name='Método')),
                ('tool_config', models.JSONField(default=dict, verbose_name='Configuração da Ferramenta')),
                ('roi_config', models.JSONField(default=dict, verbose_name='Configuração ROI')),
                ('inspec_pass_fail', models.BooleanField(default=True, verbose_name='Teste Pass/Fail')),
                ('normalize', models.BooleanField(default=False, verbose_name='Normalizar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativa')),
                ('virtual_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspection_tools', to='api.virtualmachine', verbose_name='Máquina Virtual')),
            ],
            options={
                'verbose_name': 'Ferramenta de Inspeção',
                'verbose_name_plural': 'Ferramentas de Inspeção',
                'db_table': 'api_vm_inspection_tool',
                'ordering': ['name'],
            },
        ),
    ]
